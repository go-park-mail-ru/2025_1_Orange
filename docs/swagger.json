{
    "swagger": "2.0",
    "info": {
        "description": "API веб-приложения ResuMatch для поиска работы и сотрудников.",
        "title": "ResuMatch API",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/applicant/avatar": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Загружает изображение аватара для профиля соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Загрузить аватар",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл изображения (JPEG/PNG, макс. 5MB)",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о файле",
                        "schema": {
                            "$ref": "#/definitions/dto.UploadStaticResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "413": {
                        "description": "Файл слишком большой",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Ошибка загрузки файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/emailExists": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Проверяет, есть ли работодатель с таким email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Проверка email",
                "parameters": [
                    {
                        "description": "Email для проверки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/login": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Авторизация соискателя. При успешной авторизации отправляет куки с сессией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Авторизация соискателя",
                "parameters": [
                    {
                        "description": "Данные для авторизации (email и пароль)",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (неверные учетные данные)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/profile": {
            "put": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Обновляет данные профиля соискателя, кроме аватара. Требует авторизации.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Обновить профиль соискателя",
                "parameters": [
                    {
                        "description": "Данные для обновления профиля",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ApplicantProfileUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/profile/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает профиль соискателя по ID. Требует авторизации. Доступен только для владельца профиля.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Получить профиль соискателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID соискателя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Профиль соискателя",
                        "schema": {
                            "$ref": "#/definitions/dto.ApplicantProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Нет доступа к этому профилю",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Профиль не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/register": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Регистрация соискателя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ApplicantRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/isAuth": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Проверяет авторизован пользователь или нет.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Проверка авторизации",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Завершает текущую сессию пользователя",
                "tags": [
                    "Auth"
                ],
                "summary": "Выход из системы",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/logoutAll": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Завершает все активные сессии пользователя",
                "tags": [
                    "Auth"
                ],
                "summary": "Выход со всех устройств",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/emailExists": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Проверяет, есть ли работодатель с таким email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Проверка email",
                "parameters": [
                    {
                        "description": "Email для проверки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/login": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Авторизация работодателя. При успешной авторизации отправляет куки с сессией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Авторизация работодателя",
                "parameters": [
                    {
                        "description": "Данные для авторизации (email и пароль)",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (неверные учетные данные)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/logo": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Загружает изображение логотипа для профиля работодателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Загрузить логотип",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл изображения (JPEG/PNG, макс. 5MB)",
                        "name": "logo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о файле",
                        "schema": {
                            "$ref": "#/definitions/dto.UploadStaticResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "413": {
                        "description": "Файл слишком большой",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Ошибка загрузки файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/profile": {
            "put": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Обновляет данные профиля работодателя, кроме лого. Требует авторизации.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Обновить профиль работодателя",
                "parameters": [
                    {
                        "description": "Данные для обновления профиля",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployerProfileUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/profile/{id}": {
            "get": {
                "description": "Возвращает профиль работодателя по ID. Доступен всем.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Получить профиль работодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID работодателя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Профиль работодателя",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployerProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Профиль не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/register": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Регистрация работодателя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployerRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/resume/all": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает список резюме. Для соискателей возвращает только их собственные резюме. Для других ролей - все резюме. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Получение всех резюме",
                "responses": {
                    "200": {
                        "description": "Список резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeShortResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/resume/create": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Создает новое резюме для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Создание нового резюме",
                "parameters": [
                    {
                        "description": "Данные для создания резюме",
                        "name": "resumeData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateResumeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/resume/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает полную информацию о резюме по его ID. Доступно всем авторизованным пользователям.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Получение резюме по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Обновляет информацию о резюме. Доступно только владельцу резюме (соискателю). Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Обновление резюме",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateResumeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (не владелец)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Удаляет резюме по ID. Доступно только владельцу резюме (соискателю). Требует авторизации и CSRF-токена.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Удаление резюме",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Результат удаления",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (не владелец)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ApplicantProfileResponse": {
            "type": "object",
            "properties": {
                "avatar_path": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                }
            }
        },
        "dto.ApplicantProfileUpdate": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                }
            }
        },
        "dto.ApplicantRegister": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.AuthResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateResumeRequest": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "additional_specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "education": {
                    "$ref": "#/definitions/entity.EducationType"
                },
                "educational_institution": {
                    "type": "string"
                },
                "graduation_year": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "work_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkExperienceDTO"
                    }
                }
            }
        },
        "dto.DeleteResumeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.EmailExistsRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dto.EmailExistsResponse": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.EmployerProfileResponse": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "legal_address": {
                    "type": "string"
                },
                "logo_path": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.EmployerProfileUpdate": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "legal_address": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.EmployerRegister": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "legal_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.ResumeResponse": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "additional_specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "education": {
                    "$ref": "#/definitions/entity.EducationType"
                },
                "educational_institution": {
                    "type": "string"
                },
                "graduation_year": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkExperienceResponse"
                    }
                }
            }
        },
        "dto.ResumeShortResponse": {
            "type": "object",
            "properties": {
                "applicant": {
                    "description": "Add applicant information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ApplicantProfileResponse"
                        }
                    ]
                },
                "applicant_id": {
                    "description": "Keep for backward compatibility",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "specialization": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_experience": {
                    "$ref": "#/definitions/dto.WorkExperienceShort"
                }
            }
        },
        "dto.UpdateResumeRequest": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "additional_specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "education": {
                    "$ref": "#/definitions/entity.EducationType"
                },
                "educational_institution": {
                    "type": "string"
                },
                "graduation_year": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "work_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkExperienceDTO"
                    }
                }
            }
        },
        "dto.UploadStaticResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.WorkExperienceDTO": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "duties": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "until_now": {
                    "type": "boolean"
                }
            }
        },
        "dto.WorkExperienceResponse": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "duties": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "until_now": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.WorkExperienceShort": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "duties": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "until_now": {
                    "type": "boolean"
                }
            }
        },
        "entity.EducationType": {
            "type": "string",
            "enum": [
                "secondary_school",
                "incomplete_higher",
                "higher",
                "bachelor",
                "master",
                "phd"
            ],
            "x-enum-varnames": [
                "SecondarySchool",
                "IncompleteHigher",
                "Higher",
                "Bachelor",
                "Master",
                "PhD"
            ]
        },
        "utils.APIError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "csrf_token": {
            "type": "apiKey",
            "name": "X-CSRF-Token",
            "in": "header"
        },
        "session_cookie": {
            "type": "apiKey",
            "name": "session_id",
            "in": "cookie"
        }
    }
}