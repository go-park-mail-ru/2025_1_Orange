services:
  resumatch:
    container_name: app
    build: .
    env_file: .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        ./migrate -path ./migrations -database 'postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_CONTAINER_PORT/$POSTGRES_DB?sslmode=disable' up &&
        ./.bin run
      "
    networks:
      - resumatch-network
    volumes:
      - ./assets:/app/assets

  postgres:
    container_name: postgres
    image: postgres:17-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - resumatch-network

  redis:
    container_name: redis
    image: redis:7-alpine
    env_file: .env
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - resumatch-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.55.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - resumatch-network

  grafana:
    container_name: grafana
    image: grafana/grafana:11.3.0
    volumes:
      - ./grafana.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - resumatch-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

volumes:
  postgres_data:
  redis_data:
  grafana-data:

networks:
  resumatch-network:
    driver: bridge