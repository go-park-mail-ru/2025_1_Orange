// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/applicant/avatar": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Загружает изображение аватара для профиля соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Загрузить аватар",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл изображения (JPEG/PNG, макс. 5MB)",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о файле",
                        "schema": {
                            "$ref": "#/definitions/dto.UploadStaticResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "413": {
                        "description": "Файл слишком большой",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Ошибка загрузки файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/emailExists": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Проверяет, есть ли работодатель с таким email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Проверка email",
                "parameters": [
                    {
                        "description": "Email для проверки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/login": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Авторизация соискателя. При успешной авторизации отправляет куки с сессией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Авторизация соискателя",
                "parameters": [
                    {
                        "description": "Данные для авторизации (email и пароль)",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (неверные учетные данные)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/profile": {
            "put": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Обновляет данные профиля соискателя, кроме аватара. Требует авторизации.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Обновить профиль соискателя",
                "parameters": [
                    {
                        "description": "Данные для обновления профиля",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ApplicantProfileUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/profile/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает профиль соискателя по ID. Требует авторизации. Доступен только для владельца профиля.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Получить профиль соискателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID соискателя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Профиль соискателя",
                        "schema": {
                            "$ref": "#/definitions/dto.ApplicantProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Нет доступа к этому профилю",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Профиль не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/applicant/register": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Регистрация соискателя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ApplicantRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/isAuth": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Проверяет авторизован пользователь или нет.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Проверка авторизации",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Завершает текущую сессию пользователя",
                "tags": [
                    "Auth"
                ],
                "summary": "Выход из системы",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/logoutAll": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Завершает все активные сессии пользователя",
                "tags": [
                    "Auth"
                ],
                "summary": "Выход со всех устройств",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/chat/user": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получить все чаты текущего пользователя. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Получить чаты пользователя",
                "responses": {
                    "200": {
                        "description": "Список чатов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ChatShortResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/chat/vacancy/{id}": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Создать или получить существующий чат для вакансии. Только для соискателей (applicant).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Получить чат по вакансии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Чат",
                        "schema": {
                            "$ref": "#/definitions/dto.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/chat/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получить чат по его идентификатору. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Получить чат по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Чат",
                        "schema": {
                            "$ref": "#/definitions/dto.ChatResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Чат не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/chat/{id}/messages": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получить все сообщения из указанного чата. Требует авторизации и доступа к чату.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Получить сообщения чата",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сообщений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.MessageResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Чат не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/emailExists": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Проверяет, есть ли работодатель с таким email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Проверка email",
                "parameters": [
                    {
                        "description": "Email для проверки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmailExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/login": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Авторизация работодателя. При успешной авторизации отправляет куки с сессией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Авторизация работодателя",
                "parameters": [
                    {
                        "description": "Данные для авторизации (email и пароль)",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (неверные учетные данные)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/logo": {
            "post": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Загружает изображение логотипа для профиля работодателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Загрузить логотип",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл изображения (JPEG/PNG, макс. 5MB)",
                        "name": "logo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о файле",
                        "schema": {
                            "$ref": "#/definitions/dto.UploadStaticResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "413": {
                        "description": "Файл слишком большой",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Ошибка загрузки файла",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/profile": {
            "put": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Обновляет данные профиля работодателя, кроме лого. Требует авторизации.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Обновить профиль работодателя",
                "parameters": [
                    {
                        "description": "Данные для обновления профиля",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployerProfileUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Нет доступа",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/profile/{id}": {
            "get": {
                "description": "Возвращает профиль работодателя по ID. Доступен всем.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Получить профиль работодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID работодателя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Профиль работодателя",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployerProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Профиль не найден",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/employer/register": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employer"
                ],
                "summary": "Регистрация работодателя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployerRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже существует",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/notification/clear": {
            "delete": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Удалить все уведомления пользователя. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Удалить все уведомления",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/notification/read/{id}": {
            "put": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Прочитать конкретное уведомление по id. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Прочитать уведомление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID уведомления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/notification/readAll": {
            "put": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Прочитать все уведомления пользователя. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Прочитать все уведомления",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/notification/user": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получаем список уведомлений для соискателя или работодателя. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Получить все уведомления пользователя",
                "responses": {
                    "200": {
                        "description": "Список уведомлений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.NotificationPreview"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/resume/all": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает список резюме. Для соискателей возвращает только их собственные резюме. Для других ролей - все резюме. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Получение всех резюме",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество резюме на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeShortResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/resume/create": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Создает новое резюме для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Создание нового резюме",
                "parameters": [
                    {
                        "description": "Данные для создания резюме",
                        "name": "resumeData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateResumeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/resume/pdf/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Скачивает резюме по ID в формате PDF. Требует авторизации.\nПри успешном скачивании отправляет уведомление владельцу резюме через WebSocket.",
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Получить резюме в формате PDF",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF-файл резюме",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "Content-Disposition": {
                                "type": "string",
                                "description": "attachment; filename=resume.pdf"
                            },
                            "Content-Type": {
                                "type": "string",
                                "description": "application/pdf"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID резюме",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Ошибка генерации PDF",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
=======
>>>>>>> 986c063 (Add vacancy swagger)
        "/resume/search": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Ищет резюме по профессии. Для соискателей возвращает только их собственные резюме. Для других ролей - все резюме. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Поиск резюме по профессии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Строка поиска по профессии",
                        "name": "profession",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество резюме на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных резюме",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ResumeShortResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/resume/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает полную информацию о резюме по его ID. Доступно всем авторизованным пользователям.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Получение резюме по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Обновляет информацию о резюме. Доступно только владельцу резюме (соискателю). Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Обновление резюме",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateResumeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (не владелец)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Удаляет резюме по ID. Доступно только владельцу резюме (соискателю). Требует авторизации и CSRF-токена.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resume"
                ],
                "summary": "Удаление резюме",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Результат удаления",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteResumeResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (не владелец)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Резюме не найдено",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/specialization/all": {
            "get": {
                "description": "Возвращает список имен всех специализаций без ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialization"
                ],
                "summary": "Получение списка всех специализаций",
                "responses": {
                    "200": {
                        "description": "Список имен специализаций",
                        "schema": {
                            "$ref": "#/definitions/dto.SpecializationNamesResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/specialization/salaries": {
            "get": {
                "description": "Возвращает минимальную, максимальную и среднюю зарплату для каждой специализации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialization"
                ],
                "summary": "Получение вилок зарплат по специализациям",
                "responses": {
                    "200": {
                        "description": "Вилки зарплат по специализациям",
                        "schema": {
                            "$ref": "#/definitions/dto.SpecializationSalaryRangesResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
=======
        "/vacancy/applicant/{id}/liked": {
            "get": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Отдает список понравившихся вакансий для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Получение списка понравившихся вакансии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Список вакансий",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyShortResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/applicant/{id}/vacancies": {
            "get": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получаем все вакансии на которые откликнулся соискатель для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Получение всех вакансий на которые откликнулся соискатель",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Полученная вакансия",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyShortResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателя)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/employer/{id}/vacancies": {
            "get": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получаем все активные вакансии работодателя для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Получение всех активных вакансий роботодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Полученная вакансия",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyShortResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателя)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
>>>>>>> 986c063 (Add vacancy swagger)
        "/vacancy/search": {
            "get": {
                "description": "Ищет вакансии по заданному запросу. Поиск выполняется по названию должности, специализации и названию компании. Для работодателей возвращает только их собственные вакансии. Для других ролей - все вакансии.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Поиск вакансий",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Строка поиска",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных вакансий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.VacancyShortResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
<<<<<<< HEAD
=======
        },
        "/vacancy/search/combined": {
            "get": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Ищет вакансию по параметру для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Поиск вакансии по параметру",
                "parameters": [
                    {
                        "description": "Параметр поиска вакансии",
                        "name": "searchQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Специализация для поиска вакансии",
                        "name": "specsParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Тип занятости для поиска вакансии",
                        "name": "minSalaryStr",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Специализация для поиска вакансии",
                        "name": "empParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Опыт работы для поиска вакансии",
                        "name": "expParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Найденная вакансия",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyShortResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/search/specializations": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Ищет вакансию по специализации для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Поиск вакансии по спецализации",
                "parameters": [
                    {
                        "description": "Данные для поиска вакансии",
                        "name": "searchRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchBySpecializationsRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Найденная вакансия",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyShortResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/vacancies": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает список вакансий. Для работодателей возвращает только их собственные вакансии. Для других ролей - все вакансии. Требует авторизации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Получение всех вакансий",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество вакансий на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список вакансий",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyShortResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Создает новую вакансию для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Создание новой вакансии",
                "parameters": [
                    {
                        "description": "Данные для создания вакансии",
                        "name": "vacancyCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная вакансия",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для работодателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/vacancy/{id}": {
            "get": {
                "security": [
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Возвращает полную информацию о вакансии по его ID. Доступно всем авторизованным пользователям.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Получение вакансии по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Вакансия не найдена",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Обновляет информацию о вакансии. Доступно только владельцу вакансии (работодателю). Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Обновление вакансии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "vacancyUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная вакансия",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (не владелец)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Вакансия не найдена",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "session_cookie": []
                    },
                    {
                        "csrf_token": []
                    }
                ],
                "description": "Удаляет вакансию по ID. Доступно только владельцу вакансии (работодателю). Требует авторизации и CSRF-токена.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Удаление вакансии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Результат удаления",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteVacancy"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (не владелец)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "404": {
                        "description": "Вакансия не найдена",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/vacancy/{id}/like": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Создает лайк на вакансию для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Создание лайка для вакансии",
                "responses": {
                    "201": {
                        "description": "Созданный лайк",
                        "schema": {
                            "$ref": "#/definitions/entity.VacancyLike"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/vacancy/{id}/response/list": {
            "get": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Получаем все резюме которыми откликнулись на вакансии роботодателя для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Получение всех резюме которыми откликнулись на вакансии роботодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id вакансии",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "Количество резюме на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение от начала списка",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Полученные резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.ResumeApplicantShortResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для соискателя)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/vacancy/vacancy/{id}/response/{resume_id}": {
            "post": {
                "security": [
                    {
                        "csrf_token": []
                    },
                    {
                        "session_cookie": []
                    }
                ],
                "description": "Создает отклик на вакансию для авторизованного соискателя. Требует авторизации и CSRF-токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Отклик на вакансию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID резюме",
                        "name": "resume_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для создания отклика",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Notification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное резюме",
                        "schema": {
                            "$ref": "#/definitions/dto.VacancyResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен (только для работодателей)",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
>>>>>>> 986c063 (Add vacancy swagger)
        }
    },
    "definitions": {
        "dto.ApplicantProfileResponse": {
            "type": "object",
            "properties": {
                "avatar_path": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                }
            }
        },
        "dto.ApplicantProfileUpdate": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                }
            }
        },
        "dto.ApplicantRegister": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.AuthResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ChatResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "resume": {
                    "$ref": "#/definitions/dto.ResumeChatResponse"
                },
                "updated_at": {
                    "type": "string"
                },
                "vacancy": {
                    "$ref": "#/definitions/dto.VacancyChatResponse"
                }
            }
        },
        "dto.ChatShortResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/dto.ChatUserPreview"
                },
                "vacancy_title": {
                    "type": "string"
                }
            }
        },
        "dto.ChatUserPreview": {
            "type": "object",
            "properties": {
                "avatar_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateResumeRequest": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "additional_specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "education": {
                    "$ref": "#/definitions/entity.EducationType"
                },
                "educational_institution": {
                    "type": "string"
                },
                "graduation_year": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "work_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkExperienceDTO"
                    }
                }
            }
        },
        "dto.DeleteResumeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.DeleteVacancy": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.EmailExistsRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dto.EmailExistsResponse": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.EmployerProfileResponse": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "legal_address": {
                    "type": "string"
                },
                "logo_path": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.EmployerProfileUpdate": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "legal_address": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                },
                "telegram": {
                    "type": "string"
                },
                "vk": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.EmployerRegister": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "legal_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
<<<<<<< HEAD
        "dto.MessageResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "chat_id": {
                    "type": "integer"
                },
                "from_applicant": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "payload": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "integer"
                },
                "sender_id": {
                    "type": "integer"
                },
                "sent_at": {
                    "type": "string"
                }
            }
        },
        "dto.ResumeChatResponse": {
            "type": "object",
            "properties": {
                "applicant_id": {
                    "type": "integer"
                },
                "avatar_path": {
=======
        "dto.ResumeApplicantShortResponse": {
            "type": "object",
            "properties": {
                "applicant": {
                    "$ref": "#/definitions/dto.ApplicantProfileResponse"
                },
                "applicant_id": {
                    "type": "integer"
                },
                "created_at": {
>>>>>>> 986c063 (Add vacancy swagger)
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "profession": {
                    "type": "string"
<<<<<<< HEAD
=======
                },
                "skills": {
                    "description": "Добавлено поле навыков",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_experiences": {
                    "$ref": "#/definitions/dto.WorkExperienceShort"
>>>>>>> 986c063 (Add vacancy swagger)
                }
            }
        },
        "dto.ResumeResponse": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "additional_specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "education": {
                    "$ref": "#/definitions/entity.EducationType"
                },
                "educational_institution": {
                    "type": "string"
                },
                "graduation_year": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "profession": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkExperienceResponse"
                    }
                }
            }
        },
        "dto.ResumeShortResponse": {
            "type": "object",
            "properties": {
                "applicant": {
                    "description": "Add applicant information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ApplicantProfileResponse"
                        }
                    ]
                },
                "applicant_id": {
                    "description": "Keep for backward compatibility",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "profession": {
                    "type": "string"
                },
                "specialization": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_experiences": {
                    "$ref": "#/definitions/dto.WorkExperienceShort"
                }
            }
        },
<<<<<<< HEAD
=======
        "dto.SearchBySpecializationsRequest": {
            "type": "object",
            "properties": {
                "specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
>>>>>>> 986c063 (Add vacancy swagger)
        "dto.SpecializationNamesResponse": {
            "type": "object",
            "properties": {
                "specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.SpecializationSalaryRange": {
            "type": "object",
            "properties": {
                "avgSalary": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maxSalary": {
                    "type": "integer"
                },
                "minSalary": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.SpecializationSalaryRangesResponse": {
            "type": "object",
            "properties": {
                "specializations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SpecializationSalaryRange"
                    }
                }
            }
        },
        "dto.UpdateResumeRequest": {
            "type": "object",
            "properties": {
                "about_me": {
                    "type": "string"
                },
                "additional_specializations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "education": {
                    "$ref": "#/definitions/entity.EducationType"
                },
                "educational_institution": {
                    "type": "string"
                },
                "graduation_year": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "work_experiences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WorkExperienceDTO"
                    }
                }
            }
        },
        "dto.UploadStaticResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                }
            }
        },
<<<<<<< HEAD
        "dto.VacancyChatResponse": {
            "type": "object",
            "properties": {
                "employer_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo_path": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.VacancyShortResponse": {
=======
        "dto.VacancyCreate": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employment": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "optional_requirements": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "salary_from": {
                    "type": "integer"
                },
                "salary_to": {
                    "type": "integer"
                },
                "schedule": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "tasks": {
                    "type": "string"
                },
                "taxes_included": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "work_format": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "integer"
                }
            }
        },
        "dto.VacancyResponse": {
>>>>>>> 986c063 (Add vacancy swagger)
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
<<<<<<< HEAD
                "employer": {
                    "$ref": "#/definitions/dto.EmployerProfileResponse"
=======
                "description": {
                    "type": "string"
                },
                "employer_id": {
                    "type": "integer"
>>>>>>> 986c063 (Add vacancy swagger)
                },
                "employment": {
                    "type": "string"
                },
<<<<<<< HEAD
=======
                "experience": {
                    "type": "string"
                },
>>>>>>> 986c063 (Add vacancy swagger)
                "id": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
<<<<<<< HEAD
=======
                "optional_requirements": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
>>>>>>> 986c063 (Add vacancy swagger)
                "responded": {
                    "type": "boolean"
                },
                "salary_from": {
                    "type": "integer"
                },
                "salary_to": {
                    "type": "integer"
                },
<<<<<<< HEAD
                "specialization": {
                    "type": "string"
                },
=======
                "schedule": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "tasks": {
                    "type": "string"
                },
>>>>>>> 986c063 (Add vacancy swagger)
                "taxes_included": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_format": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "integer"
<<<<<<< HEAD
=======
                }
            }
        },
        "dto.VacancyShortResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "employer": {
                    "$ref": "#/definitions/dto.EmployerProfileResponse"
                },
                "employment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "responded": {
                    "type": "boolean"
                },
                "salary_from": {
                    "type": "integer"
                },
                "salary_to": {
                    "type": "integer"
                },
                "specialization": {
                    "type": "string"
                },
                "taxes_included": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_format": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "integer"
                }
            }
        },
        "dto.VacancyUpdate": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employment": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "optional_requirements": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "salary_from": {
                    "type": "integer"
                },
                "salary_to": {
                    "type": "integer"
                },
                "schedule": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "tasks": {
                    "type": "string"
                },
                "taxes_included": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "work_format": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "integer"
>>>>>>> 986c063 (Add vacancy swagger)
                }
            }
        },
        "dto.WorkExperienceDTO": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "duties": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "until_now": {
                    "type": "boolean"
                }
            }
        },
        "dto.WorkExperienceResponse": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "duties": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "until_now": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.WorkExperienceShort": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "duties": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "until_now": {
                    "type": "boolean"
                }
            }
        },
        "entity.EducationType": {
            "type": "string",
            "enum": [
                "secondary_school",
                "incomplete_higher",
                "higher",
                "bachelor",
                "master",
                "phd"
            ],
            "x-enum-varnames": [
                "SecondarySchool",
                "IncompleteHigher",
                "Higher",
                "Bachelor",
                "Master",
                "PhD"
            ]
        },
<<<<<<< HEAD
        "entity.NotificationPreview": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "employer_name": {
                    "type": "string"
                },
=======
        "entity.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
>>>>>>> 986c063 (Add vacancy swagger)
                "id": {
                    "type": "integer"
                },
                "is_viewed": {
                    "type": "boolean"
                },
                "object_id": {
                    "type": "integer"
                },
                "receiver_id": {
                    "type": "integer"
                },
<<<<<<< HEAD
=======
                "receiver_role": {
                    "$ref": "#/definitions/entity.UserRole"
                },
>>>>>>> 986c063 (Add vacancy swagger)
                "resume_id": {
                    "type": "integer"
                },
                "sender_id": {
                    "type": "integer"
                },
<<<<<<< HEAD
                "title": {
                    "type": "string"
=======
                "sender_role": {
                    "$ref": "#/definitions/entity.UserRole"
>>>>>>> 986c063 (Add vacancy swagger)
                },
                "type": {
                    "$ref": "#/definitions/entity.NotificationType"
                }
            }
        },
        "entity.NotificationType": {
            "type": "string",
            "enum": [
                "apply",
                "download_resume"
            ],
            "x-enum-varnames": [
                "ApplyNotificationType",
                "DownloadResumeType"
            ]
        },
<<<<<<< HEAD
=======
        "entity.UserRole": {
            "type": "string",
            "enum": [
                "applicant",
                "employer"
            ],
            "x-enum-varnames": [
                "ApplicantRole",
                "EmployerRole"
            ]
        },
        "entity.VacancyLike": {
            "type": "object",
            "properties": {
                "applicant_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "liked_at": {
                    "type": "string"
                },
                "vacancy_id": {
                    "type": "integer"
                }
            }
        },
>>>>>>> 986c063 (Add vacancy swagger)
        "utils.APIError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "csrf_token": {
            "type": "apiKey",
            "name": "X-CSRF-Token",
            "in": "header"
        },
        "session_cookie": {
            "type": "apiKey",
            "name": "session_id",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "ResuMatch API",
	Description:      "API веб-приложения ResuMatch для поиска работы и сотрудников.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
