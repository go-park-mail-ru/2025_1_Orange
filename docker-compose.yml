services:
  resumatch:
    container_name: app
    build:
      context: .
      dockerfile: docker/app.dockerfile
    env_file: .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      poll:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        ./migrate -path ./migrations -database 'postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_CONTAINER_PORT/$POSTGRES_DB?sslmode=disable' up &&
        ./.bin run
      "
    networks:
      - resumatch-network
    volumes:
      - ./assets:/app/assets

  poll:
    container_name: poll
    build:
      context: .
      dockerfile: docker/poll.dockerfile
    env_file: .env
    ports:
      - "${POLL_PORT}:${POLL_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
#    command: >
#      sh -c "./.bin"
    networks:
      - resumatch-network

  postgres:
    container_name: postgres
    image: postgres:17-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - resumatch-network

  redis:
    container_name: redis
    image: redis:7-alpine
    env_file: .env
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - resumatch-network

volumes:
  postgres_data:
  redis_data:

networks:
  resumatch-network:
    driver: bridge
